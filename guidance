#!/usr/bin/env node

/* dependencies */

var program   = require('commander'),
    question  = require('inquirer'),
    clc       = require('cli-color');


/* lib */

var Scaffold = require('./lib/scaffold/Scaffold.js');


/* program */

program
  .version('0.0.1');

program
  .command('init')
  .alias('i')
  .description('Create scaffold for new guideline')
  .option("-p, --path [base_path]", "Set base path")
  .action(function(options){
    var path = options.path || ".";
    Scaffold.init(path);
  });

program
  .command('create [obj]')
  .alias('c')
  .description('Create scaffoldind for object')
  .action(function(obj){
    Scaffold.create(obj);
  });

program
  .command('category [category]')
  .alias('cat')
  .description('Create scaffold for category')
  .action(function(category){
    Scaffold.category(category);
  });

program
  .command('new [module_category]')
  .description('Create new module in [module_category]')
  .option("-m, --module [module_name]", "Set module name")
  .action(function(module_category, options){
    var name = options.module || "";
    Scaffold.module(module_category, name);
  });

program
  .command('font')
  .description('Create new font')
  .option("-n, --name [font_name]", "Set font name")
  .action(function(options){
    var font_name = options.name || "";
    Scaffold.font(font_name);
  });

program.parse(process.argv);


/* default - no arguments passed */

var showInfo = function(){
  var line1 = "****       GUIDANCE        ****";
  var line2 = "A front-end guideline generator";
  var line3 = "(-h for help)     version 0.0.1";

  var line1Colored = "";
  for (var i=0; i<line1.length; ++i){
    var r = Math.floor(Math.random() * (230 - 21) + 21);
    var color = clc.xterm(r);
    line1Colored += color(line1.charAt(i));
  }

  console.log(line1Colored);
  console.log(clc.blackBright(line2));
  console.log(clc.blackBright(line3));
};

if (process.argv.length < 3){
  showInfo();
}